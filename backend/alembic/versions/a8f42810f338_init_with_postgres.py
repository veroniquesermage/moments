"""init with postgres

Revision ID: a8f42810f338
Revises: 
Create Date: 2025-06-01 12:39:01.382548

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a8f42810f338'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groupe',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_groupe_id'), 'groupe', ['id'], unique=False)
    op.create_table('utilisateur',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('google_id', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_utilisateur_id'), 'utilisateur', ['id'], unique=False)
    op.create_table('idees_cadeaux',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('proposee_par_id', sa.Integer(), nullable=False),
    sa.Column('visibilite', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['proposee_par_id'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_idees_cadeaux_id'), 'idees_cadeaux', ['id'], unique=False)
    op.create_table('utilisateur_groupe',
    sa.Column('utilisateur_id', sa.Integer(), nullable=False),
    sa.Column('groupe_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('date_ajout', sa.DateTime(), nullable=True),
    sa.CheckConstraint("role IN ('ADMIN', 'MEMBRE', 'INVITE')", name='check_role'),
    sa.ForeignKeyConstraint(['groupe_id'], ['groupe.id'], ),
    sa.ForeignKeyConstraint(['utilisateur_id'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('utilisateur_id', 'groupe_id')
    )
    op.create_table('cadeaux',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('destinataire_id', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('marque', sa.String(), nullable=True),
    sa.Column('magasin', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('quantite', sa.Integer(), nullable=True),
    sa.Column('prix', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('frais_port', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('commentaire', sa.String(), nullable=True),
    sa.Column('priorite', sa.Integer(), nullable=False),
    sa.Column('statut', sa.Enum('DISPONIBLE', 'RESERVE', 'PRIS', 'PARTAGE', name='giftstatusenum'), nullable=False),
    sa.Column('reserve_par_id', sa.Integer(), nullable=True),
    sa.Column('date_reservation', sa.DateTime(), nullable=True),
    sa.Column('gift_idea_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['destinataire_id'], ['utilisateur.id'], ),
    sa.ForeignKeyConstraint(['gift_idea_id'], ['idees_cadeaux.id'], ),
    sa.ForeignKeyConstraint(['reserve_par_id'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cadeaux_id'), 'cadeaux', ['id'], unique=False)
    op.create_table('cadeaux_partages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('preneur_id', sa.Integer(), nullable=False),
    sa.Column('cadeau_id', sa.Integer(), nullable=False),
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('montant', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('rembourse', sa.Boolean(), nullable=True),
    sa.CheckConstraint('participant_id != preneur_id', name='check_pas_soi_meme'),
    sa.ForeignKeyConstraint(['cadeau_id'], ['cadeaux.id'], ),
    sa.ForeignKeyConstraint(['participant_id'], ['utilisateur.id'], ),
    sa.ForeignKeyConstraint(['preneur_id'], ['utilisateur.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cadeau_id', 'participant_id', name='uix_cadeau_participant')
    )
    op.create_index('ix_cadeaux_partages_cadeau_id', 'cadeaux_partages', ['cadeau_id'], unique=False)
    op.create_index(op.f('ix_cadeaux_partages_id'), 'cadeaux_partages', ['id'], unique=False)
    op.create_index('ix_cadeaux_partages_participant_id', 'cadeaux_partages', ['participant_id'], unique=False)
    op.create_table('gift_delivery',
    sa.Column('gift_id', sa.Integer(), nullable=False),
    sa.Column('prix_reel', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('lieu_livraison', sa.String(), nullable=True),
    sa.Column('date_livraison', sa.DateTime(), nullable=True),
    sa.Column('recu', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['gift_id'], ['cadeaux.id'], ),
    sa.PrimaryKeyConstraint('gift_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('gift_delivery')
    op.drop_index('ix_cadeaux_partages_participant_id', table_name='cadeaux_partages')
    op.drop_index(op.f('ix_cadeaux_partages_id'), table_name='cadeaux_partages')
    op.drop_index('ix_cadeaux_partages_cadeau_id', table_name='cadeaux_partages')
    op.drop_table('cadeaux_partages')
    op.drop_index(op.f('ix_cadeaux_id'), table_name='cadeaux')
    op.drop_table('cadeaux')
    op.drop_table('utilisateur_groupe')
    op.drop_index(op.f('ix_idees_cadeaux_id'), table_name='idees_cadeaux')
    op.drop_table('idees_cadeaux')
    op.drop_index(op.f('ix_utilisateur_id'), table_name='utilisateur')
    op.drop_table('utilisateur')
    op.drop_index(op.f('ix_groupe_id'), table_name='groupe')
    op.drop_table('groupe')
    # ### end Alembic commands ###
